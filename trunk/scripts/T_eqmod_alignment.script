{
  This script can be used to create a pointing model for EQMOD.
  All the alignment data are cleared and a new model is automatically build.
  After the model is ready the "sync mode" is automatically switched to allow delta sync 
  for precision pointing.
  This new version allow for an unlimited number of points.
  
  Use the script scope_alignment if you not use an EQMOD mount.
   
  Edit the parameters below according to your needs, then comment the indicated row.
  
}

//// Configure number of points on each side of the meridian: ////
 const npointE=9;
       npointW=5;
///////////////////////////////////////////////       

 var i: integer;
     arg: TStringList;
     al_east: array[0..npointE-1]of array[0..1]of double;
     al_west: array[0..npointW-1]of array[0..1]of double;
     do_east, do_west, to_be_configured, ok: boolean;
     exposure,binning,filter_num: string;
const f5='0.00000';

procedure SetParameters;
begin
// comment or remove the next row after you set your parameters
to_be_configured:=true;

///////////  Parameters //////////////////////
 exposure  := '8';    // seconds
 binning   := '1x1';  // binning can speedup the process
 filter_num:= '1';    // position of clear filter (-1 if no filters)

 // East side alignment 
 do_east   :=true;    // do alignment on east azimut
  //            Azimut                Elevation
 al_east[0][0]:=45.0;  al_east[0][1]:=35.0;
 al_east[1][0]:=90.0;  al_east[1][1]:=60.0;
 al_east[2][0]:=110.0; al_east[2][1]:=30.0;
 al_east[3][0]:=140.0; al_east[3][1]:=30.0;
 al_east[4][0]:=170.0; al_east[4][1]:=30.0;
 al_east[5][0]:=170.0; al_east[5][1]:=50.0;
 al_east[6][0]:=170.0; al_east[6][1]:=70.0;
 al_east[7][0]:=90.0;  al_east[7][1]:=80.0;
 al_east[8][0]:=10.0;  al_east[8][1]:=60.0;

 // West side alignment 
 do_west   :=true;   // do alignment on west azimut
  //            Azimut                Elevation
 al_west[0][0]:=340.0; al_west[0][1]:=60.0;
 al_west[1][0]:=240.0; al_west[1][1]:=75.0;
 al_west[2][0]:=210.0; al_west[2][1]:=30.0;
 al_west[3][0]:=245.0; al_west[3][1]:=30.0;
 al_west[4][0]:=300.0; al_west[4][1]:=60.0;
///////////  Parameters //////////////////////
end;

procedure exiterror;
var errtxt: string;
begin
getS('LastError',errtxt);
raiseexception(erCustomError, errtxt);
end;

function SyncAltAz(alt,elev: double):boolean;
var ra,de: double;
begin
  // convert to RA/DEC
  Hz2Eq(alt,elev,ra,de);
  // move the telescope
  arg.clear;
  arg.add(FormatFloat(f5,ra));
  arg.add(FormatFloat(f5,de));
  if not(CmdArg('TELESCOPE_SLEW',arg)=msgOK) then exiterror;
  // take control exposure
  if not(Cmd('PREVIEW_SINGLE')=msgOK) then exiterror;
  // Solve image
  if not(Cmd('ASTROMETRY_SOLVE')=msgOK) then exiterror;
  // Sync telescope to image
  if not(Cmd('ASTROMETRY_SYNC')=msgOK) then exiterror;

end;

begin
 to_be_configured:=false;
 
// get a stringlist
 GetSL('STRL1',arg);

 SetParameters;

if to_be_configured then begin
  logMsg('This is a script template!');
  logMsg('You need to edit this script to set your parameters');
  logMsg('before it can be run.');
  logMsg('Then remove the row: "to_be_configured:=true;"');
  raiseexception(erCustomError, 'Configuration need');
end;

 getB('TELESCOPE_EQMOD',ok);
 if not ok then begin
   logMsg('This script can only be run with an EQMOD mount!');
   raiseexception(erCustomError, 'Not EQMOD');
 end;
 
 // Set filter
 arg.clear;
 arg.add(filter_num);
 CmdArg('WHEEL_SETFILTER',arg);

 // Set camera exposure time
 arg.clear;
 arg.add(exposure);
 CmdArg('PREVIEW_SETEXPOSURE',arg);
 // Set camera binning
 arg.clear;
 arg.add(binning);
 CmdArg('PREVIEW_SETBINNING',arg);

 // Clear all alignment
 Cmd('EQMOD_CLEARPOINTS');
 Cmd('EQMOD_CLEARSYNCDELTA');
 
 // Set Sync mode to Append
 Cmd('EQMOD_APPENDSYNC');

// East alignment
 if do_east then begin
   for i:=0 to npointE-1 do begin
     SyncAltAz(al_east[i][0],al_east[i][1]);
   end;
 end;

 // West alignment
 if do_west then begin
   for i:=0 to npointW-1 do begin
     SyncAltAz(al_west[i][0],al_west[i][1]);
   end;
 end;
 
 // Set Sync mode to Standard
 Cmd('EQMOD_STDSYNC');
 

end.
