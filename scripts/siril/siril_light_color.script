# CCDciel script to process files with Siril
#
# Process a color series

from ccdciel import ccdciel
from ccdciel import IsWindows
import sys
import os
try:
  import subprocess
except:
  print('Cannot import subprocess, your version of python is probably too old, try python3')
  sys.exit(1)
try: 
  from pathlib import Path
except:
  print('Cannot import pathlib, your version of python is probably too old, try python3')
  sys.exit(1)

# Get capture directories.
# CCDciel must be configured to use only subfolder by frame type
DirectorySeparator = ccdciel('DirectorySeparator')['result']
basedir = ccdciel('CaptureDir')['result']
lightdir = ccdciel('LightDir')['result']
biasdir = ccdciel('BiasDir')['result']
darkdir = ccdciel('DarkDir')['result']
flatdir = ccdciel('FlatDir')['result']
flatprefix = flatdir
masterbias = '..'+DirectorySeparator+biasdir+DirectorySeparator+'Master_Bias'
masterdark = '..'+DirectorySeparator+darkdir+DirectorySeparator+'Master_Dark'
masterflat = '..'+DirectorySeparator+flatdir+DirectorySeparator+'Master_Flat'

if IsWindows :
   sirilcmd = r'C:\Program Files\SiriL\bin\siril.exe'
else :
   sirilcmd  = "siril"

# Get scripts directory, template are in same directory
siriltemplatedir = os.path.dirname(os.path.abspath(sys.argv[0]))
tmpdir = ccdciel('TmpDir')['result']

processdir = basedir+DirectorySeparator+'processed'
processpath = Path(processdir)
processpath.mkdir(exist_ok=True)

# List unique prefix in the Light directory
# CCDciel must be configured to make file name with Object and Filter only
lightlist = []
for p in Path(basedir+DirectorySeparator+lightdir).glob("*.fits"):
   buf = str(p.name)
   if buf[0:3] == 'pp_' :   # skip preprocessed
      continue
   if buf[0:2] == 'r_' :    # skip registred
      continue
   p = buf.find("_")
   if p < 0 :
      continue 
   obj = buf[0:p]
   if obj in lightlist:
      continue 
   lightlist.append(obj)

# Get the list of filter name
listfilter = ccdciel('WHEEL_GETFILTERSNAME')['result']
# Add images without filter
filters = [""]
filters.extend(listfilter)

# Loop for Light prefix
for lightprefix in lightlist:
    # Loop for filter name
    for fi in filters:
       if fi != "":
          fi = "_"+fi
          
       # count files with this filter 
       filecount = len(list(Path(basedir+DirectorySeparator+lightdir).glob(lightprefix+fi+"_[0-9]*.fits")))   
       if filecount<1 :
          continue  
          
       ccdciel('LogMsg','Process '+lightprefix+fi)
       
       # Replace variable in template
       templatefile = siriltemplatedir+DirectorySeparator+"template_light_color.ssf"
       f = open(templatefile, 'r')
       script = f.read()
       f.close()
       script = script.replace("$BASEDIR", basedir)
       script = script.replace("$LIGHTDIR", lightdir)
       script = script.replace("$MASTERDARK", masterdark)
       script = script.replace("$MASTERFLAT", masterflat)
       script = script.replace("$LIGHTPREFIX", lightprefix)
       script = script.replace("$FILTER", fi)
       tmpfile = tmpdir+DirectorySeparator+"tmp.ssf"
       f = open(tmpfile, 'w')
       f.write(script)
       f.close()   

       # Run Siril
       logfile = basedir+DirectorySeparator+"siril_"+lightprefix+fi+".log"
       f = open(logfile, 'wb')
       pp = subprocess.Popen('"'+sirilcmd+'"'+' -s "'+tmpfile+'"', shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
       for line in pp.stdout.readlines():
         f.write(line)
       f.close()  

       # Move processed files
       for p in Path(basedir+DirectorySeparator+lightdir).glob("pp_"+lightprefix+fi+"_*.fits"):
          p.rename(processpath.joinpath(p.name)) 
       p = Path(basedir+DirectorySeparator+lightdir+DirectorySeparator+"r_pp_"+lightprefix+fi+"_stacked.fits")
       if p.is_file():
          p.rename(processpath.joinpath(p.name)) 

       # Cleanup
       for p in Path(basedir+DirectorySeparator+lightdir).glob("*_.seq"):
          p.unlink()
       for p in Path(basedir+DirectorySeparator+lightdir).glob("r_pp_*.fits"):
          p.unlink()
